# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  data: LoginData
  message: String!
  statusCode: Float!
}

type Comment {
  content: String!
  createdAt: DateTime!
  id: Int!
  parent: Comment
  post: Post!
  replies: [Comment!]!
  updatedAt: DateTime!
  user: User!
}

type CommentResponse {
  data: Comment
  message: String!
  statusCode: Float!
}

input CreateCommentInput {
  content: String!
  parentId: Int
  postId: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterInput {
  commentId: Int
  limit: Int! = 10
  page: Int! = 1
  postId: Int
  role: String
  sortBy: String
  sortOrder: String
}

input ForgotPasswordInput {
  email: String!
}

input GetCommentInput {
  id: Float = null
  includeReplies: Boolean = false
}

input GetUserInput {
  id: Float!
  includeComments: Boolean = false
  includePosts: Boolean = false
}

type LoginData {
  accessToken: String!
  id: Float!
  refreshToken: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createComment(createCommentInput: CreateCommentInput!): CommentResponse!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
  removeComment(commentId: Float!): CommentResponse!
  removeUser: UserResponse!
  resetPassword(resetPasswordInput: ResetPasswordInput!, token: String!): AuthResponse!
  signup(signupInput: SignupInput!): AuthResponse!
  updateComment(updateCommentInput: UpdateCommentInput!): CommentResponse!
  updateUser(updateUserInput: UpdateUserInput!): UserResponse!
  verifyEmail(token: String!): AuthResponse!
}

type PaginatedCommentResponse {
  currentPage: Float!
  data: [Comment!]
  message: String!
  pageSize: Float!
  statusCode: Float!
  totalCount: Float!
  totalPages: Float!
}

type PaginatedUserResponse {
  currentPage: Float!
  data: [User!]
  message: String!
  pageSize: Float!
  statusCode: Float!
  totalCount: Float!
  totalPages: Float!
}

type Post {
  comments: [Comment!]!
  content: String!
  coverImage: String
  createdAt: DateTime!
  id: Int!
  tag: String!
  thumbnail: String
  title: String!
  updatedAt: DateTime!
  user: User!
}

type Query {
  comment(getCommentInput: GetCommentInput!): CommentResponse!
  comments(filter: FilterInput!): PaginatedCommentResponse!
  currentUser: UserResponse!
  signout: Boolean!
  user(getUserInput: GetUserInput!): UserResponse!
  users(filter: FilterInput!): PaginatedUserResponse!
}

input ResetPasswordInput {
  newPassword: String!
}

input SignupInput {
  confirmPassword: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input UpdateCommentInput {
  content: String
  id: Float!
}

input UpdateUserInput {
  email: String
  firstName: String
  lastName: String
  password: String
}

type User {
  comments: [Comment!]!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: Int!
  isVerified: Boolean!
  lastName: String!
  password: String!
  posts: [Post!]!
  profileImage: String
  thumbnail: String
  updatedAt: DateTime!
  verificationToken: String
}

type UserResponse {
  data: User
  message: String!
  statusCode: Float!
}